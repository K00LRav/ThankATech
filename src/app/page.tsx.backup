"use client";

import { useState, useEffect } from 'react';
import { fetchTechnicians, getUserLocation } from '../lib/techniciansApi';
import { sendThankYou, sendTip } from '../lib/firebase';
import Registration from '../components/Registration';

interface Technician {
  id: string;
  name: string;
  title: string;
  about: string;
  image: string;
  points: number;
  category: string;
  rating?: number;
  phone?: string;
  address?: string;
  businessName?: string;
  businessPhone?: string;
  businessEmail?: string;
  website?: string;
  businessAddress?: string;
  serviceArea?: string;
  hourlyRate?: string;
  availability?: string;
  experience?: string;
  certifications?: string;
  isSample?: boolean;
}

export default function Home() {
  const [profiles, setProfiles] = useState<Technician[]>([]);
  const [currentProfileIndex, setCurrentProfileIndex] = useState(0);
  const [isFlipping, setIsFlipping] = useState(false);
  const [touchStart, setTouchStart] = useState<number | null>(null);
  const [touchEnd, setTouchEnd] = useState<number | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [showRegistration, setShowRegistration] = useState(false);
  const [currentUser, setCurrentUser] = useState<any>(null);
  const [thankYouMessage, setThankYouMessage] = useState('');
  const [showThankYou, setShowThankYou] = useState(false);
  const [expandedCard, setExpandedCard] = useState(false);
  
  const profile = profiles[currentProfileIndex] || {};

  // Minimum swipe distance (in px)
  const minSwipeDistance = 50;

  // Get technician data
  useEffect(() => {
    const loadTechnicians = async () => {
      setLoading(true);
      try {
        const data = await fetchTechnicians('all', null, 8);
        if (Array.isArray(data) && data.length > 0) {
          setProfiles(data);
          setCurrentProfileIndex(0);
        } else {
          setError('No technician data available');
        }
      } catch (error) {
        console.error('Failed to load technicians:', error);
        setError('Failed to load technician data');
      } finally {
        setLoading(false);
      }
    };

    loadTechnicians();
  }, []);

  const flipToNext = () => {
    if (isFlipping) return;
    setIsFlipping(true);
    setCurrentProfileIndex((prev) => (prev + 1) % profiles.length);
    setTimeout(() => setIsFlipping(false), 600);
  };

  const flipToPrevious = () => {
    if (isFlipping) return;
    setIsFlipping(true);
    setCurrentProfileIndex((prev) => (prev - 1 + profiles.length) % profiles.length);
    setTimeout(() => setIsFlipping(false), 600);
  };

  const handleThankYou = async () => {
    if (!currentUser) {
      setShowRegistration(true);
      return;
    }

    try {
      const currentTechnician = profiles[currentProfileIndex];
      await sendThankYou(currentTechnician.id, currentUser.id, 'Thank you for your great service!');
      
      // Update the technician's points locally
      setProfiles(prev => prev.map((tech, index) => 
        index === currentProfileIndex 
          ? { ...tech, points: tech.points + 1 }
          : tech
      ));

      setThankYouMessage('Thank you sent successfully! 🎉');
      setShowThankYou(true);
      setTimeout(() => setShowThankYou(false), 3000);
    } catch (error) {
      console.error('Error sending thank you:', error);
      setError('Failed to send thank you. Please try again.');
    }
  };

  const handleTip = async () => {
    if (!currentUser) {
      setShowRegistration(true);
      return;
    }

    // In a real app, you'd show a tip amount selection modal
    const tipAmount = 5; // Default tip amount
    
    try {
      const currentTechnician = profiles[currentProfileIndex];
      await sendTip(currentTechnician.id, currentUser.id, tipAmount, 'Tip for excellent service!');
      
      // Update the technician's points locally (tips give more points)
      setProfiles(prev => prev.map((tech, index) => 
        index === currentProfileIndex 
          ? { ...tech, points: tech.points + tipAmount }
          : tech
      ));

      setThankYouMessage(`$${tipAmount} tip sent successfully! 💰`);
      setShowThankYou(true);
      setTimeout(() => setShowThankYou(false), 3000);
    } catch (error) {
      console.error('Error sending tip:', error);
      setError('Failed to send tip. Please try again.');
    }
  };

  const handleRegistrationComplete = (user: any) => {
    setCurrentUser(user);
    setShowRegistration(false);
    setThankYouMessage('Welcome to ThankATech! You can now thank technicians.');
    setShowThankYou(true);
    setTimeout(() => setShowThankYou(false), 3000);
  };

  const handleRegistrationClose = () => {
    setShowRegistration(false);
  };

  useEffect(() => {
    const handleWheel = (e: WheelEvent) => {
      if (isFlipping) return;
      
      if (e.deltaY > 0) {
        flipToNext();
      } else if (e.deltaY < 0) {
        flipToPrevious();
      }
    };

    const handleTouchStart = (e: TouchEvent) => {
      setTouchEnd(null);
      setTouchStart(e.targetTouches[0].clientY);
    };

    const handleTouchMove = (e: TouchEvent) => {
      setTouchEnd(e.targetTouches[0].clientY);
    };

    const handleTouchEnd = () => {
      if (!touchStart || !touchEnd) return;
      
      const distance = touchStart - touchEnd;
      const isUpSwipe = distance > minSwipeDistance;
      const isDownSwipe = distance < -minSwipeDistance;

      if (isUpSwipe) {
        flipToNext(); // Swipe up = next profile
      } else if (isDownSwipe) {
        flipToPrevious(); // Swipe down = previous profile
      }
    };

    const cardElement = document.getElementById('rolodex-card');
    if (cardElement) {
      // Mouse wheel events
      cardElement.addEventListener('wheel', handleWheel, { passive: false });
      
      // Touch events
      cardElement.addEventListener('touchstart', handleTouchStart, { passive: true });
      cardElement.addEventListener('touchmove', handleTouchMove, { passive: true });
      cardElement.addEventListener('touchend', handleTouchEnd, { passive: true });
      
      return () => {
        cardElement.removeEventListener('wheel', handleWheel);
        cardElement.removeEventListener('touchstart', handleTouchStart);
        cardElement.removeEventListener('touchmove', handleTouchMove);
        cardElement.removeEventListener('touchend', handleTouchEnd);
      };
    }
  }, [isFlipping, profiles.length, touchStart, touchEnd]);
  
  // Show loading state
  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-indigo-400 mx-auto mb-4"></div>
          <p className="text-indigo-300 font-semibold">Loading amazing technicians near you...</p>
        </div>
      </div>
    );
  }

  // Show error state
  if (error) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 flex items-center justify-center">
        <div className="text-center">
          <p className="text-red-400 font-semibold mb-4">{error}</p>
          <button 
            onClick={() => window.location.reload()} 
            className="px-6 py-3 bg-indigo-600 text-white rounded-full hover:bg-indigo-500 transition-colors duration-200"
          >
            Try Again
          </button>
        </div>
      </div>
    );
  }

  // Show empty state
  if (profiles.length === 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 flex items-center justify-center">
        <div className="text-center">
          <p className="text-gray-300 font-semibold">No technicians found in your area.</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 relative overflow-hidden">
      {/* Animated background elements */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-indigo-400/20 to-purple-600/20 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-blue-400/20 to-indigo-600/20 rounded-full blur-3xl animate-pulse delay-1000"></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-br from-purple-400/10 to-pink-600/10 rounded-full blur-3xl animate-pulse delay-500"></div>
      </div>
      <div className="relative z-10">
        {/* Header */}
        <header className="flex justify-between items-center mb-8">
          <div className="text-3xl font-bold bg-gradient-to-r from-indigo-400 to-purple-500 bg-clip-text text-transparent">
            ThankATech
          </div>
          <div className="flex gap-4 items-center">
            {currentUser ? (
              <div className="flex items-center space-x-3">
                {currentUser.photoURL && (
                  <img 
                    src={currentUser.photoURL} 
                    alt="Profile" 
                    className="w-8 h-8 rounded-full border-2 border-white/20"
                  />
                )}
                <span className="text-gray-300">Welcome, {currentUser.name}!</span>
              </div>
            ) : (
              <button 
                onClick={() => setShowRegistration(true)}
                className="text-gray-300 hover:text-indigo-400 transition-colors duration-200 font-medium"
              >
                Join Now
              </button>
            )}
            <button className="px-6 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full text-white hover:bg-white/20 transition-all duration-200 font-medium">
              Search
            </button>
          </div>
        </header>

      {/* Main Content */}
      <div className="flex flex-col items-center space-y-8">
        
        {/* Sample Data Notice */}
        {profiles.length > 0 && profiles[0].isSample && (
          <div className="bg-yellow-500/20 backdrop-blur-sm border border-yellow-400/30 rounded-2xl p-6 max-w-2xl text-center">
            <div className="text-yellow-100">
              <h3 className="font-semibold mb-2 text-lg">🔧 These are sample profiles!</h3>
              <p className="text-sm text-yellow-200">
                Real technicians can <button 
                  onClick={() => setShowRegistration(true)} 
                  className="text-yellow-300 hover:text-yellow-100 hover:underline font-semibold transition-colors duration-200"
                >register here</button> to create their own profile and start receiving thanks and tips from customers!
              </p>
            </div>
          </div>
        )}
        {/* Modern Rolodex Card */}
        <div id="rolodex-card" className={`relative group cursor-pointer ${isFlipping ? 'animate-pulse' : ''}`}>
          {/* Glass morphism background layers - Much wider and dynamic height */}
          <div className={`absolute top-3 left-3 w-96 sm:w-[28rem] md:w-[36rem] lg:w-[42rem] xl:w-[48rem] ${expandedCard ? 'h-auto min-h-96 sm:min-h-[32rem]' : 'h-96 sm:h-[32rem]'} bg-gradient-to-br from-indigo-400/20 to-purple-600/20 backdrop-blur-sm rounded-2xl transform rotate-2 transition-all duration-500 group-hover:rotate-3 group-hover:top-4 group-hover:left-4 border border-white/20`}></div>
          <div className={`absolute top-1.5 left-1.5 w-96 sm:w-[28rem] md:w-[36rem] lg:w-[42rem] xl:w-[48rem] ${expandedCard ? 'h-auto min-h-96 sm:min-h-[32rem]' : 'h-96 sm:h-[32rem]'} bg-gradient-to-br from-blue-400/15 to-indigo-600/15 backdrop-blur-sm rounded-2xl transform rotate-1 transition-all duration-500 group-hover:rotate-2 group-hover:top-2.5 group-hover:left-2.5 border border-white/10`}></div>
          
          {/* Main Modern Card - Much wider and dynamic height */}
          <div className={`relative w-96 sm:w-[28rem] md:w-[36rem] lg:w-[42rem] xl:w-[48rem] ${expandedCard ? 'h-auto min-h-96 sm:min-h-[32rem]' : 'h-96 sm:h-[32rem]'} bg-gradient-to-br from-white to-gray-50 backdrop-blur-lg rounded-2xl shadow-2xl border border-gray-200/50 p-6 lg:p-8 transition-all duration-500 ease-out group-hover:shadow-3xl group-hover:-translate-y-3 group-hover:shadow-indigo-500/25 ${isFlipping ? 'scale-105 rotate-1' : ''}`}>
            
            {/* Modern Category Badge */}
            <div className="absolute -top-3 right-8 bg-gradient-to-r from-indigo-500 to-purple-600 text-white px-4 py-2 rounded-full shadow-lg">
              <span className="text-sm font-semibold tracking-wide">{profile.category || profile.title.split(' ')[0]}</span>
            </div>

            <div className="flex flex-col h-full">
              {/* Header Section */}
              <div className="flex items-start space-x-4 mb-4">
                {/* Profile Image with modern styling */}
                <div className="relative">
                  <div className="w-20 h-20 sm:w-24 sm:h-24 lg:w-28 lg:h-28 rounded-2xl overflow-hidden shadow-lg ring-4 ring-white/50">
                    <img
                      src={profile.image}
                      alt={profile.name}
                      className="w-full h-full object-cover"
                    />
                  </div>
                  {/* Rating overlay */}
                  <div className="absolute -bottom-2 -right-2 bg-yellow-400 text-yellow-900 rounded-full w-8 h-8 flex items-center justify-center text-sm font-bold shadow-lg">
                    {profile.rating ? `${profile.rating}★` : '5★'}
                  </div>
                </div>

                {/* Name and Title */}
                <div className="flex-1 min-w-0">
                  <h2 className="text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 truncate">{profile.name}</h2>
                  <p className="text-sm sm:text-base lg:text-lg text-indigo-600 font-semibold mt-1">{profile.businessName || profile.title}</p>
                  {profile.serviceArea && (
                    <p className="text-xs text-gray-500 mt-1 flex items-center">
                      <span className="mr-1">📍</span>
                      {profile.serviceArea}
                    </p>
                  )}
                </div>
              </div>

              {/* Content Section - Responsive layout */}
              <div className={`${expandedCard ? 'grid grid-cols-1 lg:grid-cols-2 gap-6' : 'space-y-3'}`}>
                {/* Left Column - About & Basic Info */}
                <div className="space-y-3">
                  <div className="bg-gray-50/80 backdrop-blur-sm rounded-xl p-4 border border-gray-100">
                    <p className="text-sm lg:text-base text-gray-700 leading-relaxed">{profile.about}</p>
                  </div>

                  {/* Basic Contact Info Grid */}
                  <div className="grid grid-cols-2 gap-2">
                  {profile.businessPhone && (
                    <div className="bg-blue-50/80 backdrop-blur-sm rounded-lg p-3 border border-blue-100">
                      <div className="flex items-center space-x-2">
                        <span className="text-blue-500">📞</span>
                        <span className="text-xs text-blue-700 font-medium truncate">{profile.businessPhone}</span>
                      </div>
                    </div>
                  )}
                  {profile.businessEmail && (
                    <div className="bg-indigo-50/80 backdrop-blur-sm rounded-lg p-3 border border-indigo-100">
                      <div className="flex items-center space-x-2">
                        <span className="text-indigo-500">✉️</span>
                        <span className="text-xs text-indigo-700 font-medium truncate">{profile.businessEmail}</span>
                      </div>
                    </div>
                  )}
                  {profile.website && (
                    <div className="bg-green-50/80 backdrop-blur-sm rounded-lg p-3 border border-green-100">
                      <div className="flex items-center space-x-2">
                        <span className="text-green-500">🌐</span>
                        <span className="text-xs text-green-700 font-medium truncate">{profile.website}</span>
                      </div>
                    </div>
                  )}
                  {profile.businessAddress && (
                    <div className="bg-red-50/80 backdrop-blur-sm rounded-lg p-3 border border-red-100">
                      <div className="flex items-center space-x-2">
                        <span className="text-red-500">📍</span>
                        <span className="text-xs text-red-700 font-medium truncate">{profile.businessAddress}</span>
                      </div>
                    </div>
                  )}
                  {profile.hourlyRate && (
                    <div className="bg-purple-50/80 backdrop-blur-sm rounded-lg p-3 border border-purple-100">
                      <div className="flex items-center space-x-2">
                        <span className="text-purple-500">💰</span>
                        <span className="text-xs text-purple-700 font-medium">{profile.hourlyRate}/hr</span>
                      </div>
                    </div>
                  )}
                  {profile.experience && (
                    <div className="bg-orange-50/80 backdrop-blur-sm rounded-lg p-3 border border-orange-100">
                      <div className="flex items-center space-x-2">
                        <span className="text-orange-500">⚡</span>
                        <span className="text-xs text-orange-700 font-medium">{profile.experience}</span>
                      </div>
                    </div>
                  )}
                  {profile.availability && (
                    <div className="bg-teal-50/80 backdrop-blur-sm rounded-lg p-3 border border-teal-100">
                      <div className="flex items-center space-x-2">
                        <span className="text-teal-500">🕐</span>
                        <span className="text-xs text-teal-700 font-medium truncate">{profile.availability}</span>
                      </div>
                    </div>
                  )}
                  {profile.serviceArea && (
                    <div className="bg-cyan-50/80 backdrop-blur-sm rounded-lg p-3 border border-cyan-100">
                      <div className="flex items-center space-x-2">
                        <span className="text-cyan-500">🗺️</span>
                        <span className="text-xs text-cyan-700 font-medium truncate">{profile.serviceArea}</span>
                      </div>
                    </div>
                  )}
                  </div>
                </div>

                {/* Right Column - Expandable Details (only when expanded) */}
                {expandedCard && (
                  <div className="space-y-3 animate-in slide-in-from-right-2 duration-300">
                    {/* Additional Services */}
                    {profile.certifications && (
                      <div className="bg-gray-50/80 backdrop-blur-sm rounded-xl p-3 border border-gray-100">
                        <h4 className="text-sm font-semibold text-gray-800 mb-2">🏆 Certifications & Licenses</h4>
                        <p className="text-xs text-gray-600">{profile.certifications}</p>
                      </div>
                    )}
                    
                    {/* Detailed Availability */}
                    {profile.availability && (
                      <div className="bg-gray-50/80 backdrop-blur-sm rounded-xl p-3 border border-gray-100">
                        <h4 className="text-sm font-semibold text-gray-800 mb-2">📅 Detailed Schedule</h4>
                        <p className="text-xs text-gray-600">{profile.availability}</p>
                      </div>
                    )}

                    {/* Service Specialties */}
                    <div className="bg-gray-50/80 backdrop-blur-sm rounded-xl p-3 border border-gray-100">
                      <h4 className="text-sm font-semibold text-gray-800 mb-2">🔧 Service Specialties</h4>
                      <div className="flex flex-wrap gap-1">
                        <span className="bg-indigo-100 text-indigo-700 px-2 py-1 rounded-full text-xs">{profile.category}</span>
                        {profile.experience && (
                          <span className="bg-orange-100 text-orange-700 px-2 py-1 rounded-full text-xs">{profile.experience}</span>
                        )}
                        {profile.certifications && (
                          <span className="bg-green-100 text-green-700 px-2 py-1 rounded-full text-xs">Certified</span>
                        )}
                      </div>
                    </div>
                  </div>
                )}

              </div>

              {/* Expand/Collapse Button */}
              <div className="mt-3 text-center">
                <button
                  onClick={() => setExpandedCard(!expandedCard)}
                  className="text-xs text-gray-500 hover:text-indigo-600 transition-colors duration-200 flex items-center space-x-1 mx-auto"
                >
                  <span>{expandedCard ? 'Less Details' : 'More Details'}</span>
                  <span className={`transform transition-transform duration-200 ${expandedCard ? 'rotate-180' : ''}`}>
                    ▼
                  </span>
                </button>
              </div>

              {/* Bottom Section - Fixed at bottom */}
              <div className="flex items-center justify-between mt-4 pt-3 border-t border-gray-200/50">
                {/* Points Display */}
                <div className="flex items-center space-x-3">
                  <div className="bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-full px-4 py-2 shadow-lg">
                    <div className="flex items-center space-x-2">
                      <span className="text-sm">🏆</span>
                      <span className="text-sm font-bold">{profile.points}</span>
                      <span className="text-xs opacity-90">pts</span>
                    </div>
                  </div>
                  {profile.certifications && (
                    <div className="bg-blue-100 text-blue-700 rounded-full px-3 py-1">
                      <span className="text-xs font-medium">✓ Certified</span>
                    </div>
                  )}
                </div>

                {/* Quick Actions */}
                <div className="flex items-center space-x-2">
                  {profile.businessEmail && (
                    <button 
                      onClick={() => {
                        const subject = `Inquiry about ${profile.businessName} services`;
                        const body = `Hello ${profile.name},\n\nI found your profile on ThankATech and I'm interested in your ${profile.category} services.\n\nPlease let me know your availability.\n\nThank you!`;
                        window.location.href = `mailto:${profile.businessEmail}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
                      }}
                      className="bg-white/80 backdrop-blur-sm hover:bg-white text-gray-600 hover:text-indigo-600 rounded-full p-2 transition-all duration-200 border border-gray-200 hover:border-indigo-300 shadow-sm group"
                      title="Send Email"
                    >
                      <span className="text-sm group-hover:scale-110 transition-transform duration-200">💬</span>
                    </button>
                  )}
                  {profile.businessPhone && (
                    <button 
                      onClick={() => {
                        window.location.href = `tel:${profile.businessPhone}`;
                      }}
                      className="bg-white/80 backdrop-blur-sm hover:bg-white text-gray-600 hover:text-green-600 rounded-full p-2 transition-all duration-200 border border-gray-200 hover:border-green-300 shadow-sm group"
                      title="Call Now"
                    >
                      <span className="text-sm group-hover:scale-110 transition-transform duration-200">📞</span>
                    </button>
                  )}
                  {profile.website && (
                    <button 
                      onClick={() => {
                        if (profile.website) {
                          const url = profile.website.startsWith('http') ? profile.website : `https://${profile.website}`;
                          window.open(url, '_blank');
                        }
                      }}
                      className="bg-white/80 backdrop-blur-sm hover:bg-white text-gray-600 hover:text-blue-600 rounded-full p-2 transition-all duration-200 border border-gray-200 hover:border-blue-300 shadow-sm group"
                      title="Visit Website"
                    >
                      <span className="text-sm group-hover:scale-110 transition-transform duration-200">🌐</span>
                    </button>
                  )}
                  {profile.businessAddress && (
                    <button 
                      onClick={() => {
                        if (profile.businessAddress) {
                          const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(profile.businessAddress)}`;
                          window.open(mapsUrl, '_blank');
                        }
                      }}
                      className="bg-white/80 backdrop-blur-sm hover:bg-white text-gray-600 hover:text-red-600 rounded-full p-2 transition-all duration-200 border border-gray-200 hover:border-red-300 shadow-sm group"
                      title="Get Directions"
                    >
                      <span className="text-sm group-hover:scale-110 transition-transform duration-200">📍</span>
                    </button>
                  )}
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Scroll Hint */}
        <div className="text-center text-gray-400 text-sm flex items-center justify-center space-x-2 flex-wrap">
          <span>🖱️</span>
          <span className="hidden sm:inline">Scroll to flip through technicians</span>
          <span className="sm:hidden">Swipe up/down to flip through technicians</span>
          <span className="text-xs bg-white/10 backdrop-blur-sm px-3 py-1 rounded-full border border-white/20">({currentProfileIndex + 1}/{profiles.length})</span>
        </div>

        {/* Action Buttons */}
        <div className="flex space-x-6">
          <button 
            onClick={handleThankYou}
            className="group flex items-center space-x-3 px-8 py-4 bg-gradient-to-r from-green-500 to-emerald-600 backdrop-blur-sm rounded-2xl hover:from-green-400 hover:to-emerald-500 transition-all duration-300 shadow-lg hover:shadow-xl hover:shadow-green-500/25 hover:-translate-y-1"
          >
            <span className="text-white text-lg group-hover:scale-110 transition-transform duration-200">👍</span>
            <span className="font-semibold text-white">Thank You</span>
          </button>
          <button 
            onClick={handleTip}
            className="group flex items-center space-x-3 px-8 py-4 bg-gradient-to-r from-yellow-500 to-orange-600 backdrop-blur-sm rounded-2xl hover:from-yellow-400 hover:to-orange-500 transition-all duration-300 shadow-lg hover:shadow-xl hover:shadow-yellow-500/25 hover:-translate-y-1"
          >
            <span className="text-white text-lg group-hover:scale-110 transition-transform duration-200">💰</span>
            <span className="font-semibold text-white">Tip $5</span>
          </button>
        </div>
        </div>

        {/* Footer */}
        <footer className="mt-16 text-center text-gray-300 text-sm">
          <p>Appreciating the hard-working technicians who keep our world running.</p>
        </footer>
      </div>

      {/* Registration Modal */}
      {showRegistration && (
        <Registration 
          onRegistrationComplete={handleRegistrationComplete}
          onClose={handleRegistrationClose}
        />
      )}

      {/* Thank You Notification */}
      {showThankYou && (
        <div className="fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-bounce">
          {thankYouMessage}
        </div>
      )}
    </div>
  );
}
